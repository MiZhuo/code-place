package site.mizhuo.code;

/**
 * 0,1,,n-1这n个数字排成一个圆圈，从数字0开始，每次从这个圆圈里删除第m个数字。求出这个圆圈里剩下的最后一个数字。
 *
 * 例如，0、1、2、3、4这5个数字组成一个圆圈，从数字0开始每次删除第3个数字，则删除的前4个数字依次是2、0、4、1，因此最后剩下的数字是3。
 *
 * 示例 1：
 *
 * 输入: n = 5, m = 3
 * 输出: 3
 *
 * 示例 2：
 *
 * 输入: n = 10, m = 17
 * 输出: 2
 *
 * 限制：
 *
 * 1 <= n <= 10^5
 * 1 <= m <= 10^6
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 *
 * 示例1分析：
 * 第一轮：0 1 *2* 3 4 - 0 1 2 3 4  删除第3位
 * 第二轮：3 4 *0* 1 - 3 4 0 1      从3开始，删除第3位
 * 第三轮: 1 3 *4*  - 1 3 4         从1开始，删除第3位
 * 第四轮: 1 3 *1* 3                从1开始，删除第3位
 * 剩余：3
 *
 * 倒退3的位置
 * 最后一轮剩下的为3，位置为0
 * 第四轮，3的位置在 （0 + m）% 2 = 1
 * 第三轮，3的位置在 （1 + m) % 3 = 1
 * 第二轮，3的位置在 （1 + m）% 4 = 0
 * 第一轮，3的位置在 （0 + m) % 5 = 3
 * 得出反推过程为(当前的index + m) % 上一轮剩余字符个数
 */
public class LastRemaining {
    public int lastRemaining(int n, int m) {
        int res = 0;
        for (int i = 2; i <= n; i++) {
            res = (res + m) % n;
        }
        return res;
    }
}
