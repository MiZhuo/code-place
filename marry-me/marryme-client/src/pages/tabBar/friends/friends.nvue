<template>
	<view>
		<u-swipe-action>
			<u-subsection :list="groupList" :current="curNow" @change="sectionChange"></u-subsection>
			<u-search :showAction="false" :clearabled="false" @change="changeSearch"></u-search>
			<view class="list__item" @click="toAddFriend(popupData)">
				<u-avatar shape="square" size="35" icon="man-add-fill" fontSize="26" randomBgColor></u-avatar>
				<text class="list__item__user-name">添加亲友</text>
			</view>
			<view>
				<u-index-list :indexList="indexList" >
					<template v-for="(item, index) in friendArr">
						<u-index-item>
							<u-index-anchor :text="index"></u-index-anchor>
							<view class="u-page__swipe-action-item" >
								<u-swipe-action-item v-for="(cell, index) in item" 
									:options="options"
									v-if="cell.status"
									@click="toDeleteFriend(cell)">
									<view class="list-cell list__item"  @click="toFriendInfo(popupData,cell.id)">
										<image class="list__item__avatar" src="https://cdn.uviewui.com/uview/album/1.jpg"></image>
										<text class="list__item__user-name">{{cell.friendName}}</text>
									</view>
								</u-swipe-action-item>
							</view>
						</u-index-item>
					</template>
					<view slot="footer" class="u-safe-area-inset--bottom">
						<text class="list__footer">共{{totalSize}}位好友</text>
					</view>
				</u-index-list>
			</view>
			<u-popup :safeAreaInsetBottom="true" :safeAreaInsetTop="true" :mode="popupData.mode" :show="show"
			:round="popupData.round" :overlay="popupData.overlay" :borderRadius="popupData.borderRadius"
			:closeable="popupData.closeable" :closeOnClickOverlay="popupData.closeOnClickOverlay" @close="close"
			@open="open">
			<view class="u-popup-slot" :style="{
					width: ['bottom', 'top'].includes(popupData.mode) ? '350px' : '280px',
					marginTop: ['left', 'right'].includes(popupData.mode) ? '350px' : '250px',
				}">
				<view class="u-demo-block__content">
					<u--form labelPosition="left" :model="model1" :rules="rules" ref="form1">
						<u-form-item label="姓名" prop="friendInfo.friendName" borderBottom ref="item1">
							<u--input v-model="model1.friendInfo.friendName" border="none" placeholder="姓名,只能为中文">
							</u--input>
						</u-form-item>
						<u-form-item label="性别" prop="friendInfo.friendSex" borderBottom ref="item1">
							<u-radio-group v-model="model1.friendInfo.friendSex">
								<u-radio :customStyle="{marginRight: '16px'}" v-for="(item, index) in sexRadiolist"
									:key="index" :label="item.name" :name="item.value">
								</u-radio>
							</u-radio-group>
						</u-form-item>
						
						<u-form-item label="手机号码" prop="friendInfo.friendMobile" labelWidth="80"  borderBottom ref="item1">
							<u--input v-model="model1.friendInfo.friendMobile" border="none" placeholder="手机号码">
							</u--input>
						</u-form-item>
						
						<u-form-item label="请柬" prop="friendInfo.isInvit" borderBottom ref="item1">
							<u-radio-group v-model="model1.friendInfo.isInvit">
								<u-radio :customStyle="{marginRight: '16px'}" v-for="(item, index) in qjRadiolist"
									:key="index" :label="item.name" :name="item.value">
								</u-radio>
							</u-radio-group>
						</u-form-item>
		
					</u--form>
					<u-button type="primary" text="提交" customStyle="margin-top: 50px" @click="submit">
					</u-button>
					
				</view>
			</view>
		</u-popup>
		</u-swipe-action>
	</view>
</template>

<script>
	import { addFriendGroup } from '@/src/api/friends.js';
	import { getGroupList } from '@/src/api/friends.js';
	import { updateFriendGroup } from '@/src/api/friends.js';
	import { deleteFriendGroup } from '@/src/api/friends.js';
	import { addFriend } from '@/src/api/friends.js';
	import { getFriendsList } from '@/src/api/friends.js';
	import { getFriendInfo } from '@/src/api/friends.js';
	import { updateFriendInfo } from '@/src/api/friends.js';
	import { deleteFriend } from '@/src/api/friends.js';

	export default {
		data() {
			return {
				indexList: [],
				groupList: [],
				friendArr: [],
				totalSize: 0,
				curNow: 0,
				show: false,
				show1: true,
				urls: [
					'https://cdn.uviewui.com/uview/album/1.jpg'
				],
				popupData: {
					overlay: true,
					mode: 'center',
					round: 10,
					closeable: true,
					closeOnClickOverlay: true
				},
				model1: {
					friendInfo: {
						id: '',
						friendName: '',
						friendSex: '1',
						friendMobile: '',
						isInvit: 0,
						friendGroupId: ''
					},
					
				},
				sexRadiolist: [
					{
						name: '男',
						value: '1',
						disabled: false
					},
					{
						name: '女',
						value: '0',
						disabled: false
					}
				],
				qjRadiolist:[
					{
						name: '已发',
						value: 1,
						disabled: false
					},
					{
						name: '未发',
						value: 0,
						disabled: false
					}
				],
				rules: {
					'friendInfo.friendName': {
						type: 'string',
						required: true,
						// 自定义验证函数，同步校验
						validator: (rule, value, callback) => {
							//返回true表示校验通过，返回false表示不通过
							// this.$u.test.mobile()就是返回true或者false的，uview自带的校验方法，此处也可以自己写校验函数
							return this.$u.test.chinese(value) || this.$u.test.landline(value);
						},
						message: '请输入真实姓名',
						// 触发器可以同时用blur和change
						trigger: ['change', 'blur'],
					},
					'friendInfo.friendMobile': {
						type: 'number',
						required: true,
						validator: (rule, value, callback) => {
							return this.$u.test.mobile(value);
						},
						message: '请入真实手机号',
						trigger: ['change', 'blur'],
					},
				},
				options: [{
					icon: 'trash-fill',
					style: {
						backgroundColor: '#f56c6c',
						width: '40px',
						height: '40px',
						borderRadius: '100px',
						margin: '0 6px'
					}
				}]
			}
		},
		methods: {
			clearSearch(e){
				console.log(e);
			}, 
			changeSearch(text){
				var groupId = this.groupList[0].id;
				this.getFriendsList(groupId,text == '' ? 'undefined' : text);
			},
			toDeleteFriend(cell) {
				console.log('click', cell);
				uni.showModal({
					title: '温馨提示',
					content: '确定要删除吗？',
					success: res => {
						if (res.confirm) {
							deleteFriend(cell.id).then(res => {
								uni.$u.toast('删除成功');
								this.getFriendsList(this.model1.friendInfo.friendGroupId);
								cell.status = 0;
							}).catch(err=>{
								uni.$u.toast('删除失败');
							})
							
						}
					}
				})
			},
			sectionChange(index) {
				this.curNow = index;
				var groupId = this.groupList[index].id;
				this.getFriendsList(groupId);
				this.model1.friendInfo.friendGroupId = groupId;
			},
			getFriendsList(id,keyword){
				//根据分组ID获取亲友列表
				getFriendsList(id,keyword).then(res => {
					this.friendArr = res.data.data;
					this.totalSize = res.data.totalSize;
					this.indexList = res.data.indexList;
				}).catch(err=>{
					console.log(JSON.stringify(err.data));
				})
			},
			openPopup(popupData) {
				this.popupData = popupData
				uni.$u.sleep().then(() => {
					this.show = !this.show
				})
			},
			open() {
				// console.log('open');
			},
			close() {
				this.show = false
			},
			resetFriend(){
				this.model1.friendInfo.id = '';
				this.model1.friendInfo.friendName = '';
				this.model1.friendInfo.friendSex = '1';
				this.model1.friendInfo.friendMobile = '';
				this.model1.friendInfo.isInvit = 0;
			},
			submit() {
				// 如果有错误，会在catch中返回报错信息数组，校验通过则在then中返回true
				this.$refs.form1.validate().then(res => {
					var data = this.model1.friendInfo;
					if(data.id === ""){
						addFriend(data).then(res=>{
							uni.$u.toast('添加成功');
							this.getFriendsList(this.model1.friendInfo.friendGroupId);
							this.close();
						}).catch(err => {
							uni.$u.toast('添加失败')
						});	
					}else{
						updateFriendInfo(data).then(res=>{
							uni.$u.toast('修改成功');
							this.getFriendsList(this.model1.friendInfo.friendGroupId);
							this.close();
						}).catch(err => {
							uni.$u.toast('修改失败')
						});	
					}
					
				}).catch(errors => {
					uni.$u.toast('校验失败')
				})
			},
			dropFriend() {
				this.$refs.form1.submit();
			},
			toAddFriend(popupData){
				this.resetFriend();
				this.openPopup(popupData);
			},
			toFriendInfo(popupData,id){
				getFriendInfo(id).then(res=>{
					this.model1.friendInfo.id = res.data.id;
					this.model1.friendInfo.friendName = res.data.friendName;
					this.model1.friendInfo.friendSex = res.data.friendSex;
					this.model1.friendInfo.friendMobile = res.data.friendMobile;
					this.model1.friendInfo.isInvit = res.data.isInvit;
				}).catch(err => {
					uni.$u.toast('查询信息失败')
				});	
				this.openPopup(popupData);
			}
		},
		// onReady() {
		// 	//onReady 为uni-app支持的生命周期之一
		// 	this.$refs.form1.setRules(this.rules)
		// },
		mounted() {
			getGroupList().then(res => {
				this.groupList = res.data;
				var groupId = this.groupList[0].id;
				this.getFriendsList(groupId);
				this.model1.friendInfo.friendGroupId = groupId;
			}).catch(err => {
				uni.$u.toast('获取分组列表失败')
			});	
			//修改索引列表样式,解决被遮挡的问题
			// var x=document.getElementsByTagName('uni-scroll-view')[0];
			// var height = window.getComputedStyle(x).maxHeight;
			// x.style.maxHeight = height.replace("px","") - 140 + "px";
			//解决首字母索引被遮挡的问题
			document.getElementsByClassName('u-index-list__letter')[0].style.zIndex = 999;
		}
	}
</script>
<style lang="scss">
	.list {

		&__item {
			@include flex;
			padding: 6px 12px;
			align-items: center;

			&__avatar {
				height: 35px;
				width: 35px;
				border-radius: 3px;
			}

			&__user-name {
				font-size: 16px;
				margin-left: 10px;
				color: $u-main-color;
			}
		}

		&__footer {
			color: $u-tips-color;
			font-size: 14px;
			text-align: center;
			margin: 15px 0;
		}
	}

	.list-cell {
		display: flex;
		box-sizing: border-box;
		width: 100%;
		height: 100%;
		padding: 10px 24rpx;
		overflow: hidden;
		color: #323233;
		font-size: 14px;
		line-height: 24px;
		background-color: #fff;
	}
	
	.u-search {
		margin: 8px !important 
	}
	
	.u-index-anchor{
		height: 22px !important 
	}
	
	.swiper {
		height: 600px;
	}
	
	.u-popup-slot {
		width: 200px;
		height: 150px;
		@include flex;
		justify-content: center;
		align-items: center;
	}
	
	.u-demo-block__content {
		margin-top: -250px;
	}
	
	.u-page {
			padding: 0;
		}
	
	.u-demo-block__title {
		padding: 10px 0 2px 15px;
	}

	.swipe-action {
		&__content {
			padding: 25rpx 0;

			&__text {
				font-size: 15px;
				color: $u-main-color;
				padding-left: 30rpx;
			}
		}
	}
</style>
