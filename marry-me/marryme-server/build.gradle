
buildscript {
    ext {
        set("springBootVersion","2.7.5")
        set("springCloudVersion","2021.0.4")
        set("springCloudAlibabaVersion","2.2.9.RELEASE")
        set("logstashVersion","7.2")
        set("hutoolVersion","5.8.9")
        set("lombokVersion","1.18.24")
        set("knife4jVersion","3.0.3")
        set("nettyVersion","4.1.84.Final")
        set("bootstrapVersion","3.1.4")
    }
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    group = 'site.mizhuo'
    version = '0.0.1-SNAPSHOT'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    // 指定JDK版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    //声明一个打包源码的Task
    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
}

subprojects{
    dependencies{
        implementation "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
        implementation "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:${bootstrapVersion}"
        implementation "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
//        implementation "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation "cn.hutool:hutool-all:${hutoolVersion}"
        implementation "com.github.xiaoymin:knife4j-micro-spring-boot-starter:${knife4jVersion}"
        implementation "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jVersion}"
        implementation "org.projectlombok:lombok:${lombokVersion}"
        implementation "io.netty:netty-all:${nettyVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testImplementation('org.springframework.boot:spring-boot-starter-test:${springBootVersion}') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    }
}


